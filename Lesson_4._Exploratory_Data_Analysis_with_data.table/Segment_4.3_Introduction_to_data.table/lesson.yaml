- {Author: David Robinson, Class: Data Analysis and Visualization Using R, Course: Lesson
    4. Exploratory Data Analysis with data.table, Lesson: Segment 4.3 Introduction
    to data.table, Organization: Princeton University, Partner: princeton, Type: Coursera,
  Version: 1.0}
- {Class: video, Output: 'Would you like to re-watch the video for this segment?',
  VideoLink: 'http://youtu.be/teB2QldDlGk'}
- {Class: video, Output: 'Would you like to view the transcript of the code used in
    this video segment?', VideoLink: 'http://dgrtwo.github.io/RData/code/code_lesson4/#segment3'}
- {AnswerTests: 'any_of_exprs("library(data.table)", "library(''data.table'')", ''library("data.table")'')',
  Class: cmd_question, CorrectAnswer: library("data.table"), Hint: Use the "library"
    function, Output: Load the data.table package.}
- {AnswerTests: 'any_of_exprs(''pitching = as.data.table(pitching)'', ''pitching <-
    as.data.table(pitching)'')', Class: cmd_question, CorrectAnswer: pitching = as.data.table(pitching),
  Hint: Use the "as.data.table" function, Output: Turn the variable "pitching" (downloaded
    in Quiz 2.2) into a data.table (also called "pitching")}
- {AnswerTests: 'any_of_exprs("pitching[1:5, ]", "head(pitching, 5)", "pitching[1:5]")',
  Class: cmd_question, CorrectAnswer: 'pitching[1:5, ]', Hint: 'This is the same way
    you would extract the first five rows of a data.frame, using square brackets and
    a comma', Output: Show the first five rows of the "pitching" data.table}
- {AnswerTests: 'any_of_exprs("pitching$playerID", "pitching[, playerID]")', Class: cmd_question,
  CorrectAnswer: pitching$playerID, Hint: 'You can do this the same way as you would
    in a data.frame or list, using a $', Output: Extract the "playerID" column of
    the "pitching" data.table}
- {AnswerTests: is.data.table(e$val) && nrow(e$val) == 860 && all(e$val$teamID ==
    "OAK"), Class: cmd_question, CorrectAnswer: 'pitching[teamID == "OAK", ]', Hint: 'You
    can add a condition to filter by using square brackets, by adding the condition
    before the comma. Make sure you use == rather than =.', Output: Filter the "pitching"
    data.table to include only rows where the teamID is "OAK"}
- {AnswerTests: is.data.table(e$val) && nrow(e$val) == 29624 && all(e$val$G >= 10),
  Class: cmd_question, CorrectAnswer: 'pitching[G >= 10, ]', Hint: 'You can add a
    condition to filter by using square brackets, by adding the condition before the
    comma.', Output: Filter the "pitching" data.table to include only rows where the
    column G (that's the number of games the pitcher played) is greater than or equal
    to 10.}
- {AnswerChoices: 5;29620;29624;42583, AnswerTests: omnitest(correctVal="29624"),
  Class: mult_question, CorrectAnswer: 29624, Hint: Look at the right side of the
    output from the last problem- the numbers that are each followed by a colon are
    the row numbers. Check for the largest row number., Output: 'How many rows are
    in this filtered dataset (those that have 10 or more games)?'}
- {AnswerTests: 'any_of_exprs("pitching[order(yearID), ]", "pitching[order(yearID)]")',
  Class: cmd_question, CorrectAnswer: 'pitching[order(yearID), ]', Hint: 'Use the
    "order" function, and remember that the name of the column is "yearID".', Output: Sort
    the pitching data.table in ascending order by year (you don't need to save the
    result to a variable).}
