- {Author: David Robinson, Class: Data Analysis and Visualization Using R, Course: Lesson
    2. Visualizing Data Using ggplot2, Lesson: Segment 2.6 Input- Getting Data into
    the Right Format, Organization: Princeton University, Partner: princeton, Type: Coursera,
  Version: 1.0}
- {Class: video, Output: 'Would you like to re-watch the video for this segment?',
  VideoLink: 'http://youtu.be/UFoUm1AyT78'}
- {Class: video, Output: 'Would you like to view the transcript of the code used in
    this video segment?', VideoLink: 'http://dgrtwo.github.io/RData/code/code_lesson2/#segment6'}
- {AnswerChoices: It creates only histograms;It creates only scatterplots;It creates
    quantile-quantile plots;It creates plots from variables that are not already in
    a data frame, AnswerTests: omnitest(correctVal="It creates plots from variables
    that are not already in a data frame"), Class: mult_question, CorrectAnswer: It
    creates plots from variables that are not already in a data frame, Hint: Look
    at the two examples in the video and code that use qplot, Output: 'How does the
    qplot function differ from ggplot?'}
- {AnswerTests: 'omnitest(correctExpr=''qplot(diamonds$carat, diamonds$price)'')',
  Class: cmd_question, CorrectAnswer: 'qplot(diamonds$carat, diamonds$price)', Hint: 'You
    can extract these columns with diamonds$carat and diamonds$price, respectively',
  Output: Use the qplot function (not ggplot) to create a scatterplot showing the
    relationship between the carat (x-axis) and price (y-axis) columns in the diamonds
    dataset}
- {AnswerTests: 'any_of_exprs(''library("reshape2")'', ''library(reshape2)'', "library(''reshape2'')")',
  Class: cmd_question, CorrectAnswer: library("reshape2"), Hint: Use the library function,
  Output: Load the reshape2 package.}
- {Class: text, Output: The french_fries dataset is provided with the reshape2 package
    as an example. It contains sensory measurements testing the effect of three different
    fryer oils on how fries tasted.}
- {AnswerTests: 'any_of_exprs("data(''french_fries'')", ''data("french_fries")'',
    ''data(french_fries)'')', Class: cmd_question, CorrectAnswer: data("french_fries"),
  Hint: Use the data function, Output: Load the french_fries dataset.}
- {AnswerTests: omnitest(correctExpr='View(french_fries)'), Class: cmd_question, CorrectAnswer: View(french_fries),
  Hint: Use the View function., Output: View the french_fries dataset like a spreadsheet.}
- {Class: text, Output: 'Each subject in the french_fries dataset was queried about
    five flavors ("potato", "buttery", "grassy", "rancid", "painty"). Currently, each
    flavor the subjects were asked about is a separate column.'}
- {AnswerTests: 'expr_uses_func("geom_boxplot") && aes_matches(x="treatment", y="buttery")',
  Class: cmd_question, CorrectAnswer: 'ggplot(french_fries, aes(treatment, buttery))
    + geom_boxplot()', Hint: 'Use the geom_boxplot() layer, and remember to set "treatment"
    (the oil) as the x aesthetic.', Output: Create a boxplot comparing the "buttery"
    rating between each of the three oils (oil is denoted by the "treatment" column).}
- {AnswerTests: 'any_of_exprs(''french_fries.m = melt(french_fries, id=c("time", "treatment",
    "subject", "rep"))'', ''french_fries.m <- melt(french_fries, id=c("time", "treatment",
    "subject", "rep"))'')', Class: cmd_question, CorrectAnswer: 'french_fries.m =
    melt(french_fries, id=c("time", "treatment", "subject", "rep"))', Hint: The hard
    part is getting the "id" argument to melt right. Each column that is not a flavor
    should be provided as an id since you want to keep it as a column in the melted
    dataset., Output: 'Use reshape2''s "melt" function create a new dataset, "french_fries.m",
    such that each tasting of each flavor has a separate row. There should be one
    column called "variable" containing the flavor name ("potato", "buttery", etc)
    and one column called value containing the numeric rating.'}
- {AnswerTests: 'expr_uses_func("geom_boxplot") && aes_matches(x="treatment", y="value")
    && expr_uses_func("facet_wrap")', Class: cmd_question, CorrectAnswer: 'ggplot(french_fries.m,
    aes(treatment, value)) + geom_boxplot() + facet_wrap(~ variable)', Hint: Note
    that you'll be using the "variable" and "value" columns of the melted dataset
    rather than columns like "potato" or "buttery". Note that this kind of plot was
    not possible before the data was melted., Output: 'Use french_fries.m to create
    a boxplot comparing the taste rating between each of the three treatments (oils),
    but divide it into faceted subplots based on which flavor (buttery, potato) is
    being tested.'}
