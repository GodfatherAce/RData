- {Author: David Robinson, Class: Data Analysis and Visualization Using R, Course: Visualizing
    Data Using ggplot2, Lesson: Scatter Plots, Organization: Princeton University,
  Type: Standard, Version: 1.0}
- {Class: video, Output: 'Would you like to re-watch the video for this segment?',
  VideoLink: 'http://youtu.be/dQw4w9WgXcQ'}
- {AnswerTests: 'expr_uses_func("geom_point"); aes_matches(x="depth", y="price")',
  Class: cmd_question, CorrectAnswer: 'ggplot(diamonds, aes(x=depth, y=price)) + geom_point()',
  Hint: This will involve a call to ggplot and to geom_point(), Output: Create a scatter
    plot of the diamonds dataset with depth on the x axis and price on the y axis.}
- {AnswerTests: 'expr_uses_func("geom_point"); aes_matches(x="depth", y="price", colour="cut")',
  Class: cmd_question, CorrectAnswer: 'ggplot(diamonds, aes(x=depth, y=price, color=cut))
    + geom_point()', Hint: 'This is similar to the last quiz, but with different contents
    of aes()', Output: 'Create a scatter plot of the diamonds dataset with depth on
    the x axis, price on the y axis, and coloring points based on their cut.'}
- {AnswerTests: 'expr_uses_func("geom_point"); expr_uses_func("geom_smooth"); aes_matches(x="depth",
    y="price", colour="cut")', Class: cmd_question, CorrectAnswer: 'ggplot(diamonds,
    aes(x=depth, y=price, color=cut)) + geom_point() + geom_smooth()', Hint: 'This
    is similar to the last quiz, but you add another layer. Recall that layers look
    like geom_...().', Output: 'Create a scatter plot of the diamonds dataset with
    depth on the x axis, price on the y axis, and coloring points based on their cut,
    but this time add smoothing curves to show the trend.'}
- {Class: text, Output: 'The Orange data.frame is a dataset that comes built into
    R, which describes the height of five orange trees over time. It has three columns
    "Tree" (a factor describing which of five trees is being measured), "age" (the
    age in days at the point of measurement), and "circumference" (the circumference
    of the tree trunk in millimeters).'}
- {AnswerTests: 'any_of_exprs("data(''Orange'')", ''data("Orange")'', ''data(Orange)'')',
  Class: cmd_question, CorrectAnswer: data("Orange"), Hint: Use the "data" function,
  Output: Load the Orange dataset into memory.}
- {AnswerTests: omnitest(correctExpr='View(Orange)'), Class: cmd_question, CorrectAnswer: View(Orange),
  Hint: Use the "View" function, Output: View the Orange dataset like a spreadsheet.}
- {AnswerTests: 'expr_uses_func("geom_point"); aes_matches(x="age", y="circumference")',
  Class: cmd_question, CorrectAnswer: 'ggplot(Orange, aes(x=age, y=circumference))
    + geom_point()', Hint: 'Use a ggplot call and geom_point, but don''t forget to
    change the first argument of ggplot from "diamonds" to "orange"', Output: Create
    a scatter plot of the Orange dataset with age on the x-axis and circumference
    on the y-axis}
- {AnswerTests: 'expr_uses_func("geom_point"); aes_matches(x="age", y="circumference",
    colour="Tree")', Class: cmd_question, CorrectAnswer: 'ggplot(Orange, aes(x=age,
    y=circumference, color=Tree)) + geom_point()', Hint: 'Similar to the last answer,
    but add a value to the "aes" call.', Output: 'Create a scatter plot of the Orange
    dataset with age on the x-axis and circumference on the y-axis, with each point
    colored according to which tree it represents'}
- {AnswerTests: 'expr_uses_func("geom_point"); expr_uses_func("geom_smooth"); aes_matches(x="age",
    y="circumference", colour="Tree");', Class: cmd_question, CorrectAnswer: 'ggplot(Orange,
    aes(x=age, y=circumference, color=Tree)) + geom_point() + geom_smooth(method="lm")',
  Hint: You'll have to specify the "method" option for geom_smooth, Output: 'Create
    a scatter plot of the Orange dataset with age on the x-axis and circumference
    on the y-axis, with each point colored according to which tree it represents,
    and a best fit straight line (not curve!) for each'}
