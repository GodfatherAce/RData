- {Author: David Robinson, Class: Data Analysis and Visualization Using R, Course: Lesson
    1. Variables and Data Structures, Lesson: Segment 1.5 Lists and Data Frames, Organization: Princeton
    University, Type: Standard, Version: 1.0}
- {Class: video, Output: 'Would you like to re-watch the video for this segment?',
  VideoLink: 'http://youtu.be/U6vbR4el3kQ'}
- {Class: video, Output: 'Would you like to view the transcript of the code used in
    this video segment?', VideoLink: 'http://dgrtwo.github.io/RData/code/code_lesson1/#segment5'}
- {AnswerChoices: 'A list can be of any length, while a vector has a maximum size;A
    vector can be of any length, while a list has a maximum size;A list can contain
    values of different data types;A vector can contain values of different data types',
  AnswerTests: omnitest(correctVal="A list can contain values of different data types"),
  Class: mult_question, CorrectAnswer: A list can contain values of different data
    types, Hint: Look at the examples of lists created in the lesson, Output: 'How
    does a list differ from a vector?'}
- {AnswerTests: 'any_of_exprs(''list1 = list(c(1, 3, 4), "test", 4)'', ''list1 <-
    list(c(1, 3, 4), "test", 4)'')', Class: cmd_question, CorrectAnswer: 'list1 =
    list(c(1, 3, 4), "test", 4)', Hint: Use the "list" function to construct a list,
  Output: 'Create a list, called "list1", containing three values- the first one the
    vector c(1, 3, 4), the second one the character vector "test", and the third one
    the number 4.'}
- {AnswerTests: 'omnitest(correctExpr=''list1[[3]]'')', Class: cmd_question, CorrectAnswer: 'list1[[3]]',
  Hint: 'Use double square brackets ("[[3]]"), not single', Output: Extract the third
    value from the list list1}
- {AnswerTests: 'any_of_exprs(''list2 = list(a=c(1, 3, 4), b="test", c=4)'', ''list2
    <- list(a=c(1, 3, 4), b="test", c=4)'')', Class: cmd_question, CorrectAnswer: 'list2
    = list(c(1, 3, 4), "test", 4)', Hint: Provide the names using "a=..." etc when
    you are constructing the list, Output: 'Create a list, called "list2",  containing
    three values- the first one the vector c(1, 3, 4), the second one the character
    vector "test", and the third one the number 4, but this time give each of the
    items names- "a", "b", "c".'}
- {AnswerTests: 'any_of_exprs(''list2$c'', ''list2[["c"]]'')', Class: cmd_question,
  CorrectAnswer: list2$c, Hint: Use the dollar sign to extract the value from list2,
  Output: Extract the value named "c" from list2 using its name}
- {Class: text, Output: The "iris" data.frame comes built into R and contains measurements
    on 150 flowers of three different species.}
- {AnswerTests: 'any_of_exprs("data(iris)", ''data("iris")'', "data(''iris'')")',
  Class: cmd_question, CorrectAnswer: data("iris"), Hint: Use the "data" function
    (just like was done for the "mtcars" dataset in the video), Output: Load the iris
    dataset into your workspace}
- {AnswerTests: omnitest(correctExpr='View(iris)'), Class: cmd_question, CorrectAnswer: View(iris),
  Hint: Use the "View" function, Output: View the iris dataset like a spreadsheet}
- {AnswerChoices: 150;4;5;6, AnswerTests: omnitest(correctVal="5"), Class: mult_question,
  CorrectAnswer: 5, Hint: Count the columns in the view (not including the row.names);
    or you can do "ncol(iris)" in R, Output: 'How many columns does the iris dataset
    have?'}
- {AnswerTests: 'any_of_exprs("iris$Species", "iris[, ''Species'']", ''iris[, "Species"]'')',
  Class: cmd_question, CorrectAnswer: iris$Species, Hint: Use a $ after "iris" to
    extract a single column, Output: Extract the "Species" column from the Iris dataset}
- {AnswerTests: 'any_of_exprs("iris[3, ]")', Class: cmd_question, CorrectAnswer: 'iris[3,
    ]', Hint: Place the desired index before a comma within square brackets to extract
    a row from a data.frame, Output: Extract the third row from the Iris dataset}
- {AnswerTests: 'class(e$val) == "data.frame" & nrow(e$val) == 5 & e$val$Petal.Length
    == iris[1:5, "Petal.Length"]', Class: cmd_question, CorrectAnswer: 'iris[1:5,
    ]', Hint: Give a range of indices (separated by a colon) before the comma to subset
    a range of rows from a data.frame, Output: Extract the first 5 rows from the Iris
    dataset}
